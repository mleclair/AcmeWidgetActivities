@model Tuple<AcmeWidget.Models.ActivityModel, AcmeWidget.Models.ActivitySignUpModel>
<h2>Sign up for "@Model.Item1.ActivityType"!</h2>
<script src="~/CkEditor/ckeditor.js"></script>
<table class="ActivitySignUp">
	<tr>
		<td>
			@Html.DisplayNameFor( model => model.Item2.FirstName )
		</td>
		<td>
			@Html.TextBoxFor( model => model.Item2.FirstName , new { @id="txtFirstName" , @onchange="validateInputNotEmpty(this);" } )
		</td>
	</tr>
	<tr>
		<td>
			@Html.DisplayNameFor( model => model.Item2.LastName )
		</td>
		<td>
			@Html.TextBoxFor( model => model.Item2.LastName , new { @id="txtLastName" , @onchange="validateInputNotEmpty(this);" } )
		</td>
	</tr>
	<tr>
		<td>
			@Html.DisplayNameFor( model => model.Item2.Email )
		</td>
		<td>
			@Html.TextBoxFor( model => model.Item2.Email , new { @id="txtEmail" , @onchange="validateEmail(this);" })
		</td>
	</tr>
	<tr>
		<td>
			@Html.DisplayNameFor( model => model.Item2.Comments )
		</td>
		<td>
			<textarea name="editor1" id="editor1" rows="10" cols="80">
				@if ( !string.IsNullOrWhiteSpace ( Model.Item2.Comments ) ) { @Html.Raw( Model.Item2.Comments ) }
			</textarea>
		</td>
	</tr>
	<tr>
		<td></td>
		<td>
			<input type="submit" value="Save" onclick="SignUp(this)" /> @*disabled="disabled" />*@
			<input type="submit" value="Cancel" onclick="CancelSignUp();" />
		</td>
	</tr>
</table>
<script>
	// Replaces #editor1 with CKEditor instance using default configuration.
	CKEDITOR.replace('editor1');
</script>
<script type="text/javascript">
	var validateEmail = function ( emailField ) {
		var reg = /^([A-Za-z0-9_\-\.])+\@@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
		if (reg.test(emailField.value) == false) {
			$(emailField).addClass("Red").removeClass("Green");
			return false;
		}
		else {
			$(emailField).addClass("Green").removeClass("Red");
			return true;
		}
	};
	var validateInputNotEmpty = function ( input ) {
		if (input.value && input.value.length > 0) {
			$(input).addClass("Green").removeClass("Red");
			return true;
		} else {
			$(input).addClass("Red").removeClass("Green");
			return false;
		}
	};
</script>
<style>
	input.Red {
		border-color: red;
	}
	input.Green {
		border-color: green;
	}
</style>
